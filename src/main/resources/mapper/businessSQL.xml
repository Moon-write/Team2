<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="business">
	<select id="selectShopNo" parameterType="int" resultType="s">
		select shop_no as shopNo from shop where member_no=#{memberNo}
	</select>
	<select id="selectOrderList" parameterType="int" resultType="HashMap">
		select distinct
			order_no as orderNo,
			div_no as divNo, 
			project_no as projectNo,
			project_name as projectName,
			member_no as memberNo,
			seller_no as sellerNo, 
			to_char(order_date,'yyyy-mm-dd hh24:mi:ss') as orderDate, 
			order_price as orderPrice,
			order_point as orderPoint,
			order_del_name as orderDelName,
			order_del_post as orderDelPost, 
			order_del_addr1 as orderDelAddr1, 
			order_del_addr2 as orderDelAddr2, 
			order_del_phone as orderDelPhone, 
			order_del_ask as orderDelAsk, 
			order_status as orderStatus
		from order_tbl      
		where seller_no=#{memberNo} order by order_no asc
	</select>
	
	<update id="orderCancel" parameterType="int">
		update order_tbl
		set order_status=5
		where order_no=#{orderNo}
	</update>
	<update id="deliveryComplete" parameterType="int">
		update order_tbl
		set order_status=2
		where order_no=#{orderNo}
	</update>
	<insert id="insertDelivery" parameterType="map">
		insert into delivery values(del_seq.nextval,#{orderNo},#{carrier},#{invoiceNo})	
	</insert>
	<delete id="deleteDelivery" parameterType="long">
		delete from delivery where invoice_no=#{invoiceNo}
	</delete>
	
	<select id="searchDelivery" parameterType="map" resultType="HashMap">
		select distinct
			o.order_no as orderNo,
			div_no as divNo, 
			project_no as projectNo,
			project_name as projectName,
            member_no as memberNo,
			seller_no as sellerNo, 
			to_char(order_date,'yyyy-mm-dd hh24:mi:ss') as orderDate, 
			order_price as orderPrice,
			order_point as orderPoint,
			order_del_name as orderDelName,
			order_del_post as orderDelPost, 
			order_del_addr1 as orderDelAddr1, 
			order_del_addr2 as orderDelAddr2, 
			order_del_phone as orderDelPhone, 
			order_del_ask as orderDelAsk, 
			order_status as orderStatus
			<if test="orderStatus == 1 or orderStatus == 2">
			, carrier, invoice_no as invoiceNo
			</if>
		from order_tbl o
		<if test="orderStatus == 1 or orderStatus == 2">
		left join delivery d on(d.order_no=o.order_no)
		</if>
		where seller_no=#{memberNo}		
		<if test='!projectName.equals("")'>
		and project_name like '%'||#{projectName}||'%'
		</if>
		<if test='!startDate.equals("")'>
		and to_number(To_char(order_date,'yyyymmdd')) 
        between to_number(To_char(to_date(#{startDate},'YYYY-MM-DD'),'yyyymmdd')) and to_number(To_char(to_date(#{endDate},'YYYY-MM-DD'),'yyyymmdd')) 
		</if>
		<if test="divNo != 0 ">
		and div_no=#{divNo}
		</if>
		<if test="orderStatus != 0">
		and order_status=#{orderStatus}
		</if>
        order by o.order_no asc
	</select>
	
	<select id="selectOrderProduct" parameterType="int" resultType="HashMap">
		select
			product_no as productNo,
			option_no as optionNo,
			product_price as productPrice,
			product_amount as productAmount
		from order_product
		where order_no=#{orderNo}
	</select>
	
	<select id="selectAList" parameterType="int" resultType="HashMap">
		select * from (select rownum as rnum,n.* from (
			select distinct
				a.project_no as projectNo,
				project_name as projectName,
				auction_item as auctionItem,
				auction_category as auctionCategory,
				auction_amount as auctionAmount,
				to_char(auction_start,'yyyy-mm-dd') as auctionStart,
				to_char(auction_end,'yyyy-mm-dd') as auctionEnd,
				a.member_no as memberNo,
				auction_price as auctionPrice
			from auction_tbl a
			left join bid_tbl b on (b.project_no=a.project_no)
			where a.member_no=#{memberNo} and 
			to_number(to_char(auction_end,'yymmdd')) <![CDATA[ >= ]]> to_number(to_char(sysdate,'yymmdd')) 
			order by a.project_no desc
		)n)
	</select>
	<select id="selectExpiredAList" parameterType="int" resultType="HashMap">
		select * from (select rownum as rnum,n.* from (
			select distinct
				a.project_no as projectNo,
				project_name as projectName,
				auction_item as auctionItem,
				auction_category as auctionCategory,
				auction_amount as auctionAmount,
				to_char(auction_start,'yyyy-mm-dd') as auctionStart,
				to_char(auction_end,'yyyy-mm-dd') as auctionEnd,
				a.member_no as memberNo,
				auction_price as auctionPrice
			from auction_tbl a
			left join bid_tbl b on (b.project_no=a.project_no)
			where a.member_no=#{memberNo} and 
			to_number(to_char(auction_end,'yymmdd')) <![CDATA[ < ]]> to_number(to_char(sysdate,'yymmdd')) 
			order by a.project_no asc
		)n)
	</select>
	<select id="selectBestPrice" parameterType="map" resultType="String">
		select
			max(bid_price) as bestPrice
		from bid_tbl b
		join auction_tbl a on(a.project_no=b.project_no)
		where a.member_no=#{memberNo} and a.project_no=#{projectNo}
	</select>

	<select id="selectDList" parameterType="int" resultType="HashMap">
		select * from (select rownum as rnum,n.* from (
			select distinct
				d.project_no as projectNo, 
				d.member_no as memberNo,
				donation_division as donationDivision,
				donation_title as donationTitle, 
				donation_category as donationCategory,
				donation_target as donationTarget, 
				donation_cash as donationCash,
				to_char(donation_startdate,'yyyy-mm-dd') as donationStartdate, 
				to_char(donation_enddate,'yyyy-mm-dd') as donationEnddate,
                nvl((select sum(order_price) from order_tbl where project_no=d.project_no and div_no=2 and seller_no=d.member_no),0) as donationSum
			from donation d
            join order_tbl o on(seller_no=d.member_no)
			where d.member_no=#{memberNo} and
			to_number(to_char(donation_enddate,'yymmdd')) <![CDATA[ >= ]]> to_number(to_char(sysdate,'yymmdd')) 
			order by d.project_no desc
		)n)
	</select>
	<select id="selectExpiredDList" parameterType="int" resultType="HashMap">
		select * from (select rownum as rnum,n.* from (
			select distinct
				d.project_no as projectNo, 
				d.member_no as memberNo,
				donation_division as donationDivision,
				donation_title as donationTitle, 
				donation_category as donationCategory,
				donation_target as donationTarget, 
				donation_cash as donationCash,
				to_char(donation_startdate,'yyyy-mm-dd') as donationStartdate, 
				to_char(donation_enddate,'yyyy-mm-dd') as donationEnddate,
                nvl((select sum(order_price) from order_tbl where project_no=d.project_no and div_no=2 and seller_no=d.member_no),0) as donationSum
			from donation d
            join order_tbl o on(seller_no=d.member_no)
			where d.member_no=#{memberNo} and
			to_number(to_char(donation_enddate,'yymmdd')) <![CDATA[ < ]]> to_number(to_char(sysdate,'yymmdd')) 
			order by d.project_no desc
		)n)
	</select>
	
	<select id="selectFList" parameterType="int" resultType="HashMap">
		select * from (select rownum as rnum,n.* from (
		    select distinct
		        funding_no as fundingNo,
		        funding_name as fundingName,
		        funding_category as fundingCategory,
		        funding_detail as fundingDetail,
		        to_char(funding_start_date,'yyyy-mm-dd') as fundingStartDate, 
		        to_char(funding_end_date,'yyyy-mm-dd') as fundingEndDate,
		        funding_sum as fundingSum,
		        nvl((select sum(order_price) from order_tbl where seller_no=f.member_no and project_no=funding_no),0) as fundingCurrentSum,
		        trunc(funding_sum_rate*100,0) as fundingSumRate,
		        f.member_no as memberNo
		    from funding f 
		    join order_tbl o on (f.member_no=o.seller_no)
		    where f.member_no=#{memberNo} and
		    to_number(to_char(funding_end_date,'yymmdd')) <![CDATA[ >= ]]> to_number(to_char(sysdate,'yymmdd'))
		    order by funding_no desc
		)n)
	</select>
	<select id="selectExpiredFList" parameterType="int" resultType="HashMap">
		select * from (select rownum as rnum,n.* from (
		    select distinct
		        funding_no as fundingNo,
		        funding_name as fundingName,
		        funding_category as fundingCategory,
		        funding_detail as fundingDetail,
		        to_char(funding_start_date,'yyyy-mm-dd') as fundingStartDate, 
		        to_char(funding_end_date,'yyyy-mm-dd') as fundingEndDate,
		        funding_sum as fundingSum,
		        nvl((select sum(order_price) from order_tbl where seller_no=f.member_no and project_no=funding_no),0) as fundingCurrentSum,
		        trunc(funding_sum_rate*100,0) as fundingSumRate,
		        f.member_no as memberNo
		    from funding f 
		    join order_tbl o on (f.member_no=o.seller_no)
		    where f.member_no=#{memberNo} and
		    to_number(to_char(funding_end_date,'yymmdd')) <![CDATA[ < ]]> to_number(to_char(sysdate,'yymmdd'))
		    order by funding_no desc
		)n)
	</select>
	
	
	
	
	
	<delete id="deleteAuction" parameterType="int">
		delete from auction_tbl where project_no=#{projectNo}		
	</delete>
	<delete id="deleteFunding" parameterType="int">
		delete from funding where funding_no=#{fundingNo}
	</delete>
	<select id="checkDnOrder" parameterType="int" resultType="int">
		select count(project_no) from order_tbl where project_no=#{projectNo} and div_no=2
	</select>
	<delete id="deleteDonation" parameterType="int">
		delete from donation where project_no=#{projectNo}		
	</delete>
	
	<select id="selectAcList" parameterType="int" resultType="HashMap">
		select distinct
			v.div_no as divNo,
			a.project_no as projectNo,
			project_name as projectName, 
			nvl((select view_count from view_tbl where div_no=4 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate,'yymmdd'))
	   		-(select view_count from view_tbl where div_no=4 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate-1,'yymmdd')),0) 
	    	as viewDif,
	    	nvl((select view_count from view_tbl where div_no=4 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate-1,'yymmdd')),0) as prevCount,
	    	nvl((select view_count from view_tbl where div_no=4 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate,'yymmdd')),0) as viewCount
		from view_tbl v join auction_tbl a on (a.project_no=v.project_no)
		where member_no=#{memberNo} and v.div_no=4
	</select>
	<select id="selectFcList" parameterType="int" resultType="HashMap">
		select distinct
			v.div_no as divNo,
			funding_no as projectNo,
			funding_name as projectName, 
			nvl((select view_count from view_tbl where div_no=1 and project_no=funding_no and to_char(view_date,'yymmdd')=to_char(sysdate,'yymmdd'))
	   		-(select view_count from view_tbl where div_no=1 and project_no=funding_no and to_char(view_date,'yymmdd')=to_char(sysdate-1,'yymmdd')),0) 
	    	as viewDif,
	    	nvl((select view_count from view_tbl where div_no=1 and project_no=funding_no and to_char(view_date,'yymmdd')=to_char(sysdate-1,'yymmdd')),0) as prevCount,
	    	nvl((select view_count from view_tbl where div_no=1 and project_no=funding_no and to_char(view_date,'yymmdd')=to_char(sysdate,'yymmdd')),0) as viewCount
		from view_tbl v join funding a on (funding_no=v.project_no)
		where member_no=#{memberNo} and v.div_no=1
	</select>
	<select id="selectDcList" parameterType="int" resultType="HashMap">
		select distinct
			v.div_no as divNo,
			a.project_no as projectNo,
			donation_title as projectName, 
			nvl((select view_count from view_tbl where div_no=2 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate,'yymmdd'))
	   		-(select view_count from view_tbl where div_no=2 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate-1,'yymmdd')),0) 
	    	as viewDif,
	    	nvl((select view_count from view_tbl where div_no=2 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate-1,'yymmdd')),0) as prevCount,
	    	nvl((select view_count from view_tbl where div_no=2 and project_no=a.project_no and to_char(view_date,'yymmdd')=to_char(sysdate,'yymmdd')),0) as viewCount
		from view_tbl v join donation a on (a.project_no=v.project_no)
		where member_no=#{memberNo} and v.div_no=2
	</select>
	
	<select id="genderGraph" resultType="int">
		select count(member_gender) 
		from member 
		where member_no in
		<foreach collection="array" item="arr" open="(" close=")" separator=",">
		 #{arr}
		</foreach> 
		group by member_gender 
		order by member_gender
	</select>
		
	
	<select id="selectBidList" parameterType="int" resultType="String">
		select distinct 
		member_no
		from bid_tbl
		where project_no=#{projectNo}
	</select>
	
	<select id="auctionGender" resultType="int">
		select count(member_gender)
		from member
		where member_no in
			<foreach collection="array" item="arr" open="(" close=")" separator=",">
			 #{arr}
			</foreach>
		group by member_gender order by member_gender
	</select>
	
	<select id="selectMemberNo" parameterType="map" resultType="String">
		select distinct 
			o.member_no 
		from member m 
		join order_tbl o on(seller_no=m.member_no) 
		where seller_no=#{memberNo} and project_no=#{projectNo} and div_no=#{divNo}
	</select>
	
	<select id="selectMaleGroup" resultType="int">
		select COALESCE(val."the number", 0)
		from (
		    select 10 as age FROM dual UNION ALL
		    select 20 FROM dual UNION ALL
		    select 30 FROM dual UNION ALL
		    select 40 FROM dual UNION ALL
		    select 50 FROM dual UNION ALL
		    select 60 FROM dual UNION ALL
		    select 70 FROM dual UNION ALL
		    select 80 FROM dual UNION ALL
		    select 90 FROM dual UNION ALL
		    select 100 FROM dual
		) grp
		left join (
		    select age, count(*) as "the number"
		    from (select floor((to_char(sysdate, 'YYYY') - substr(member_birth, 1, 4)) / 10) * 10 as age from member  where member_no in 
				<foreach collection="array" item="arr" open="(" close=")" separator=",">
				 #{arr}
				</foreach>
			and member_gender='남성'
			) 
		    group by age 
		) val ON grp.age = val.age
		order by grp.age asc
	</select>
	<select id="selectFemaleGroup" resultType="int">
		select COALESCE(val."the number", 0)
		from (
		    select 10 as age FROM dual UNION ALL
		    select 20 FROM dual UNION ALL
		    select 30 FROM dual UNION ALL
		    select 40 FROM dual UNION ALL
		    select 50 FROM dual UNION ALL
		    select 60 FROM dual UNION ALL
		    select 70 FROM dual UNION ALL
		    select 80 FROM dual UNION ALL
		    select 90 FROM dual UNION ALL
		    select 100 FROM dual
		) grp
		left join (
		    select age, count(*) as "the number"
		    from (select floor((to_char(sysdate, 'YYYY') - substr(member_birth, 1, 4)) / 10) * 10 as age from member  where member_no in 
				<foreach collection="array" item="arr" open="(" close=")" separator=",">
				 #{arr}
				</foreach>
			and member_gender='여성'
			) 
		    group by age 
		) val ON grp.age = val.age
		order by grp.age asc
	</select>
	
	<select id="getDates" parameterType="map" resultType="String">
		SELECT TO_CHAR(TO_DATE(#{startDate},'YYYY-MM-DD') + LEVEL - 1, 'MM-DD') AS dates
		FROM dual
		CONNECT BY LEVEL <![CDATA[ <= ]]> ((TO_DATE(#{endDate},'YYYY-MM-DD')+ 1 - TO_DATE(#{startDate},'YYYY-MM-DD')))	    
	</select>
	
	<select id="getAmounts" parameterType="map" resultType="int">
		WITH all_date AS (
		    SELECT TO_CHAR(TO_DATE(#{startDate},'YYYY-MM-DD') + LEVEL - 1, 'YYYY-MM-DD') AS dt
		    FROM dual
		    CONNECT BY LEVEL <![CDATA[ <= ]]> (TO_DATE(#{endDate},'YYYY-MM-DD') - TO_DATE(#{startDate},'YYYY-MM-DD') + 1)
		), 
		your_order AS (
		    SELECT 
		        order_price,
		        TO_CHAR(order_date,'YYYY-MM-DD') AS order_date,
		        seller_no,
		        project_no,
		        div_no
		    FROM order_tbl
		),
		your_sum AS (
		    SELECT ad.dt, SUM(CASE WHEN yo.seller_no = #{memberNo} 
		    <if test="divNo != 0 ">
		    and yo.div_no=#{divNo}
		    </if> 
		    <if test="projectNo != 0 ">
		    and yo.project_no=#{projectNo}
		    </if>
		    THEN yo.order_price ELSE 0 END) AS bth
		    FROM all_date ad
		    LEFT JOIN your_order yo ON ad.dt = yo.order_date
		    GROUP BY ad.dt
		)
		
		SELECT SUM(bth) OVER(ORDER BY dt) AS bth
		FROM your_sum
		ORDER BY dt	    
	</select>
	
	<select id="selectStartDate" parameterType="map" resultType="String">
		select to_char(least,'yyyy-mm-dd') as startDay from (select rownum as rnum,n.least from (
    	select least(
		<if test="divNo == 1 ">funding_start_date</if> 
	    <if test="divNo == 2 ">donation_startdate</if>
	    <if test="divNo == 4 ">auction_start</if>
	    <if test="divNo == 0 ">nvl(auction_start,sysdate), nvl(funding_start_date,sysdate), nvl(donation_startdate,sysdate)</if>
	    ) as least
	    from
	    <if test="divNo == 1 ">funding</if> 
	    <if test="divNo == 2 ">donation</if>
	    <if test="divNo == 4 ">auction_tbl</if>
	    <if test="divNo == 0 ">
	    order_tbl
		left join auction_tbl a on(a.member_no=seller_no)
		left join donation d on(d.member_no=seller_no)
		left join funding f on(f.member_no=seller_no)
	    </if>
	    where 
	    <if test="divNo != 0 ">member_no=#{memberNo}</if>
	    <if test="divNo == 0 ">seller_no=#{memberNo}</if>
	    order by least
		)n) where rnum=1
	</select>
	
	<select id="selectFundingSum" parameterType="map" resultType="String">
		select funding_sum from funding where member_no=#{memberNo} and funding_no=#{projectNo}
	</select>
	
	<select id="selectDonationTarget" parameterType="map" resultType="String">
		select donation_target from donation where member_no=#{memberNo} and project_no=#{projectNo}
	</select>
	
	<select id="selectStartEndDate" parameterType="map" resultType="HashMap">
		select 
		<if test="divNo == 1 ">
			to_char(funding_start_date,'yyyy-mm-dd') as startDate, 
			to_char(funding_end_date,'yyyy-mm-dd') as endDate 
		</if>
		<if test="divNo == 2 ">
			to_char(donation_startdate,'yyyy-mm-dd') as startDate, 
			to_char(donation_enddate,'yyyy-mm-dd') as endDate 
		</if>
		<if test="divNo == 4 ">
			to_char(auction_start,'yyyy-mm-dd') as startDate, 
			to_char(auction_end,'yyyy-mm-dd') as endDate 
		</if>
		from
		<if test="divNo == 1 ">funding</if>
		<if test="divNo == 2 ">donation</if>
		<if test="divNo == 4 ">auction_tbl</if>		
		where member_no=#{memberNo} and 
		<if test="divNo == 1 ">funding_no=#{projectNo}</if>
		<if test="divNo != 1 ">project_no=#{projectNo}</if>		
	</select>
</mapper>
